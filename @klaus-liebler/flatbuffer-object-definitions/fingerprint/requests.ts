// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { RequestCancelInstruction } from '../fingerprint/request-cancel-instruction';
import { RequestDeleteAllFingers } from '../fingerprint/request-delete-all-fingers';
import { RequestDeleteFinger } from '../fingerprint/request-delete-finger';
import { RequestEnrollNewFinger } from '../fingerprint/request-enroll-new-finger';
import { RequestFingerActionManually } from '../fingerprint/request-finger-action-manually';
import { RequestFingerprintSensorInfo } from '../fingerprint/request-fingerprint-sensor-info';
import { RequestFingers } from '../fingerprint/request-fingers';
import { RequestRenameFinger } from '../fingerprint/request-rename-finger';
import { RequestStoreFingerAction } from '../fingerprint/request-store-finger-action';
import { RequestStoreFingerSchedule } from '../fingerprint/request-store-finger-schedule';


export enum Requests {
  NONE = 0,
  RequestFingers = 1,
  RequestFingerprintSensorInfo = 2,
  RequestRenameFinger = 3,
  RequestCancelInstruction = 4,
  RequestDeleteAllFingers = 5,
  RequestStoreFingerSchedule = 6,
  RequestStoreFingerAction = 7,
  RequestDeleteFinger = 8,
  RequestEnrollNewFinger = 9,
  RequestFingerActionManually = 10
}

export function unionToRequests(
  type: Requests,
  accessor: (obj:RequestCancelInstruction|RequestDeleteAllFingers|RequestDeleteFinger|RequestEnrollNewFinger|RequestFingerActionManually|RequestFingerprintSensorInfo|RequestFingers|RequestRenameFinger|RequestStoreFingerAction|RequestStoreFingerSchedule) => RequestCancelInstruction|RequestDeleteAllFingers|RequestDeleteFinger|RequestEnrollNewFinger|RequestFingerActionManually|RequestFingerprintSensorInfo|RequestFingers|RequestRenameFinger|RequestStoreFingerAction|RequestStoreFingerSchedule|null
): RequestCancelInstruction|RequestDeleteAllFingers|RequestDeleteFinger|RequestEnrollNewFinger|RequestFingerActionManually|RequestFingerprintSensorInfo|RequestFingers|RequestRenameFinger|RequestStoreFingerAction|RequestStoreFingerSchedule|null {
  switch(Requests[type]) {
    case 'NONE': return null; 
    case 'RequestFingers': return accessor(new RequestFingers())! as RequestFingers;
    case 'RequestFingerprintSensorInfo': return accessor(new RequestFingerprintSensorInfo())! as RequestFingerprintSensorInfo;
    case 'RequestRenameFinger': return accessor(new RequestRenameFinger())! as RequestRenameFinger;
    case 'RequestCancelInstruction': return accessor(new RequestCancelInstruction())! as RequestCancelInstruction;
    case 'RequestDeleteAllFingers': return accessor(new RequestDeleteAllFingers())! as RequestDeleteAllFingers;
    case 'RequestStoreFingerSchedule': return accessor(new RequestStoreFingerSchedule())! as RequestStoreFingerSchedule;
    case 'RequestStoreFingerAction': return accessor(new RequestStoreFingerAction())! as RequestStoreFingerAction;
    case 'RequestDeleteFinger': return accessor(new RequestDeleteFinger())! as RequestDeleteFinger;
    case 'RequestEnrollNewFinger': return accessor(new RequestEnrollNewFinger())! as RequestEnrollNewFinger;
    case 'RequestFingerActionManually': return accessor(new RequestFingerActionManually())! as RequestFingerActionManually;
    default: return null;
  }
}

export function unionListToRequests(
  type: Requests, 
  accessor: (index: number, obj:RequestCancelInstruction|RequestDeleteAllFingers|RequestDeleteFinger|RequestEnrollNewFinger|RequestFingerActionManually|RequestFingerprintSensorInfo|RequestFingers|RequestRenameFinger|RequestStoreFingerAction|RequestStoreFingerSchedule) => RequestCancelInstruction|RequestDeleteAllFingers|RequestDeleteFinger|RequestEnrollNewFinger|RequestFingerActionManually|RequestFingerprintSensorInfo|RequestFingers|RequestRenameFinger|RequestStoreFingerAction|RequestStoreFingerSchedule|null, 
  index: number
): RequestCancelInstruction|RequestDeleteAllFingers|RequestDeleteFinger|RequestEnrollNewFinger|RequestFingerActionManually|RequestFingerprintSensorInfo|RequestFingers|RequestRenameFinger|RequestStoreFingerAction|RequestStoreFingerSchedule|null {
  switch(Requests[type]) {
    case 'NONE': return null; 
    case 'RequestFingers': return accessor(index, new RequestFingers())! as RequestFingers;
    case 'RequestFingerprintSensorInfo': return accessor(index, new RequestFingerprintSensorInfo())! as RequestFingerprintSensorInfo;
    case 'RequestRenameFinger': return accessor(index, new RequestRenameFinger())! as RequestRenameFinger;
    case 'RequestCancelInstruction': return accessor(index, new RequestCancelInstruction())! as RequestCancelInstruction;
    case 'RequestDeleteAllFingers': return accessor(index, new RequestDeleteAllFingers())! as RequestDeleteAllFingers;
    case 'RequestStoreFingerSchedule': return accessor(index, new RequestStoreFingerSchedule())! as RequestStoreFingerSchedule;
    case 'RequestStoreFingerAction': return accessor(index, new RequestStoreFingerAction())! as RequestStoreFingerAction;
    case 'RequestDeleteFinger': return accessor(index, new RequestDeleteFinger())! as RequestDeleteFinger;
    case 'RequestEnrollNewFinger': return accessor(index, new RequestEnrollNewFinger())! as RequestEnrollNewFinger;
    case 'RequestFingerActionManually': return accessor(index, new RequestFingerActionManually())! as RequestFingerActionManually;
    default: return null;
  }
}
