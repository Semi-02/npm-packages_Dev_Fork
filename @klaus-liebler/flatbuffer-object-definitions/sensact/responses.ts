// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { NotifyStatus } from '../sensact/notify-status';
import { ResponseCommand } from '../sensact/response-command';
import { ResponseStatus } from '../sensact/response-status';


export enum Responses {
  NONE = 0,
  ResponseStatus = 1,
  ResponseCommand = 2,
  NotifyStatus = 3
}

export function unionToResponses(
  type: Responses,
  accessor: (obj:NotifyStatus|ResponseCommand|ResponseStatus) => NotifyStatus|ResponseCommand|ResponseStatus|null
): NotifyStatus|ResponseCommand|ResponseStatus|null {
  switch(Responses[type]) {
    case 'NONE': return null; 
    case 'ResponseStatus': return accessor(new ResponseStatus())! as ResponseStatus;
    case 'ResponseCommand': return accessor(new ResponseCommand())! as ResponseCommand;
    case 'NotifyStatus': return accessor(new NotifyStatus())! as NotifyStatus;
    default: return null;
  }
}

export function unionListToResponses(
  type: Responses, 
  accessor: (index: number, obj:NotifyStatus|ResponseCommand|ResponseStatus) => NotifyStatus|ResponseCommand|ResponseStatus|null, 
  index: number
): NotifyStatus|ResponseCommand|ResponseStatus|null {
  switch(Responses[type]) {
    case 'NONE': return null; 
    case 'ResponseStatus': return accessor(index, new ResponseStatus())! as ResponseStatus;
    case 'ResponseCommand': return accessor(index, new ResponseCommand())! as ResponseCommand;
    case 'NotifyStatus': return accessor(index, new NotifyStatus())! as NotifyStatus;
    default: return null;
  }
}
